# Generated by Django 4.2.3 on 2023-10-30 15:24

import ajna.models.base
import django.contrib.postgres.fields
import django.core.serializers.json
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ajna", "0062_v1ethereumpool_last_block_number_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="V3GoerliAuction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.TextField(unique=True)),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("kicker", models.CharField(max_length=42, null=True)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "collateral_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "debt_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("settled", models.BooleanField(default=False)),
                ("settle_time", models.DateTimeField(null=True)),
                (
                    "bond_factor",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "bond_size",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "neutral_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "last_take_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliAuctionAuctionSettle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliAuctionBucketTake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("taker", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "auction_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("bond_change", models.DecimalField(decimal_places=18, max_digits=32)),
                ("is_reward", models.BooleanField(default=False)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliAuctionKick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("kicker", models.CharField(max_length=42)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("bond", models.DecimalField(decimal_places=18, max_digits=32)),
                ("locked", models.DecimalField(decimal_places=18, max_digits=32)),
                ("kick_momp", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "starting_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliAuctionSettle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("settled_debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliAuctionTake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("taker", models.CharField(max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "auction_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("bond_change", models.DecimalField(decimal_places=18, max_digits=32)),
                ("is_reward", models.BooleanField(default=False)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliGrantDistributionPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("distribution_id", models.IntegerField(unique=True)),
                ("start_block", models.BigIntegerField()),
                ("end_block", models.BigIntegerField()),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliGrantEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("transaction_hash", models.CharField(max_length=66)),
                ("name", models.CharField(max_length=42)),
                (
                    "data",
                    models.JSONField(
                        encoder=ajna.models.base._GrantEventDataJSONEncoder
                    ),
                ),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliGrantProposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("proposal_id", models.TextField(unique=True)),
                ("distribution_id", models.IntegerField()),
                ("proposer", models.CharField(max_length=42)),
                ("description", models.TextField()),
                (
                    "total_tokens_requested",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "params",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                    ),
                ),
                ("executed", models.BooleanField(default=False)),
                (
                    "screening_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "funding_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "funding_votes_positive",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "funding_votes_negative",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("funding_start_block_number", models.BigIntegerField()),
                ("finalize_start_block_number", models.BigIntegerField()),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "erc",
                    models.CharField(
                        choices=[("erc20", "erc20"), ("erc721", "erc721")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "volume_today",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "allowed_token_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), null=True, size=None
                    ),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                (
                    "address",
                    models.CharField(db_index=True, max_length=42, unique=True),
                ),
                ("created_at_block_number", models.BigIntegerField()),
                ("created_at_timestamp", models.BigIntegerField()),
                ("last_block_number", models.BigIntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliReserveAuction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.TextField(unique=True)),
                ("pool_address", models.CharField(max_length=42)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "last_take_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                ("ajna_burned", models.DecimalField(decimal_places=18, max_digits=32)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliReserveAuctionKick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("reserve_auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("burn_epoch", models.BigIntegerField()),
                ("kicker", models.CharField(max_length=42)),
                ("kicker_award", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "starting_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("transaction_hash", models.CharField(max_length=66)),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliReserveAuctionTake",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_index", models.CharField(max_length=26, unique=True)),
                ("reserve_auction_uid", models.TextField()),
                ("pool_address", models.CharField(max_length=42)),
                ("taker", models.CharField(max_length=42)),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "auction_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("ajna_burned", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "quote_purchased",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("transaction_hash", models.CharField(max_length=66)),
            ],
            options={
                "ordering": ("-block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "underlying_address",
                    models.CharField(db_index=True, max_length=42, unique=True),
                ),
                ("symbol", models.CharField(db_index=True, max_length=64)),
                ("name", models.CharField(max_length=255)),
                ("decimals", models.BigIntegerField()),
                (
                    "underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("pool_count", models.BigIntegerField(null=True)),
                ("total_supply", models.BigIntegerField(null=True)),
                ("tx_count", models.BigIntegerField(null=True)),
                ("is_erc721", models.BooleanField(null=True)),
                (
                    "erc",
                    models.CharField(
                        choices=[("erc20", "erc20"), ("erc721", "erc721")],
                        max_length=10,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=42, unique=True)),
                ("first_activity", models.DateTimeField(null=True)),
                ("last_activity", models.DateTimeField(null=True)),
                ("eoa", models.CharField(max_length=42, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V3GoerliWalletPoolPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wallet_address", models.CharField(db_index=True, max_length=42)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("supply", models.DecimalField(decimal_places=18, max_digits=32)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("t0debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("in_liquidation", models.BooleanField(default=False)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "lup",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("datetime", models.DateTimeField()),
                ("block_number", models.BigIntegerField(db_index=True)),
            ],
            options={
                "ordering": ("block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
                "unique_together": {("wallet_address", "block_number", "pool_address")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliWalletPoolBucketState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wallet_address", models.CharField(max_length=42)),
                ("pool_address", models.CharField(max_length=42)),
                ("bucket_index", models.IntegerField()),
                ("deposit", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=[
                            "pool_address",
                            "wallet_address",
                            "bucket_index",
                            "block_number",
                        ],
                        name="ajna_v3goer_pool_ad_a4b673_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_address", "bucket_index"],
                        name="ajna_v3goer_pool_ad_952fba_idx",
                    ),
                    models.Index(
                        fields=["pool_address"], name="ajna_v3goer_pool_ad_bf2c25_idx"
                    ),
                    models.Index(
                        fields=["wallet_address"], name="ajna_v3goer_wallet__e4ff50_idx"
                    ),
                    models.Index(
                        fields=["bucket_index"], name="ajna_v3goer_bucket__c2f4c3_idx"
                    ),
                    models.Index(
                        fields=["block_number"], name="ajna_v3goer_block_n_b13e36_idx"
                    ),
                    models.Index(
                        fields=["block_datetime"], name="ajna_v3goer_block_d_77cfb2_idx"
                    ),
                ],
                "unique_together": {
                    ("pool_address", "wallet_address", "bucket_index", "block_number")
                },
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPriceFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=18, max_digits=32)),
                ("timestamp", models.BigIntegerField(db_index=True)),
                ("datetime", models.DateTimeField(null=True)),
                ("underlying_address", models.CharField(db_index=True, max_length=42)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["underlying_address"],
                        name="ajna_v3goer_underly_e3de9b_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="ajna_v3goer_timesta_e903ca_idx"
                    ),
                    models.Index(
                        fields=["datetime"], name="ajna_v3goer_datetim_38668f_idx"
                    ),
                    models.Index(
                        fields=["underlying_address", "datetime"],
                        name="ajna_v3goer_underly_0e66c9_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPoolVolumeSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("date", models.DateField()),
            ],
            options={
                "abstract": False,
                "unique_together": {("pool_address", "date")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPoolSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "erc",
                    models.CharField(
                        choices=[("erc20", "erc20"), ("erc721", "erc721")],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "volume_today",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "allowed_token_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(), null=True, size=None
                    ),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                ("address", models.CharField(db_index=True, max_length=42)),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateralization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("address", "datetime")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPoolEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(max_length=42)),
                (
                    "wallet_addresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=42), null=True, size=None
                    ),
                ),
                (
                    "bucket_indexes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), null=True, size=None
                    ),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("order_index", models.CharField(max_length=26)),
                ("transaction_hash", models.CharField(max_length=66)),
                ("name", models.CharField(max_length=42)),
                ("data", models.JSONField()),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["pool_address", "order_index"],
                        name="ajna_v3goer_pool_ad_ebb189_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses", "order_index"],
                        name="ajna_v3goer_pool_ad_755e07_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses"],
                        name="ajna_v3goer_pool_ad_0459a8_idx",
                    ),
                    models.Index(
                        fields=["pool_address"], name="ajna_v3goer_pool_ad_194053_idx"
                    ),
                    models.Index(
                        fields=["order_index"], name="ajna_v3goer_order_i_ad924b_idx"
                    ),
                ],
                "unique_together": {("pool_address", "order_index")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliPoolBucketState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(max_length=42)),
                ("bucket_index", models.IntegerField()),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("deposit", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "lpb",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["pool_address", "bucket_index", "block_number"],
                        name="ajna_v3goer_pool_ad_8c4988_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "bucket_index"],
                        name="ajna_v3goer_pool_ad_44b0e4_idx",
                    ),
                    models.Index(
                        fields=["pool_address"], name="ajna_v3goer_pool_ad_cfe4ff_idx"
                    ),
                    models.Index(
                        fields=["bucket_index"], name="ajna_v3goer_bucket__b022f1_idx"
                    ),
                    models.Index(
                        fields=["block_number"], name="ajna_v3goer_block_n_b4786d_idx"
                    ),
                    models.Index(
                        fields=["block_datetime"], name="ajna_v3goer_block_d_4541d2_idx"
                    ),
                ],
                "unique_together": {("pool_address", "bucket_index", "block_number")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.TextField()),
                ("key", models.TextField()),
                (
                    "data",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder
                    ),
                ),
                (
                    "activity",
                    models.JSONField(
                        encoder=django.core.serializers.json.DjangoJSONEncoder,
                        null=True,
                    ),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                ("pool_address", models.CharField(max_length=42, null=True)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
                "unique_together": {("pool_address", "key", "type")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliCurrentWalletPoolPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wallet_address", models.CharField(db_index=True, max_length=42)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("supply", models.DecimalField(decimal_places=18, max_digits=32)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("t0debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                ("in_liquidation", models.BooleanField(default=False)),
                ("datetime", models.DateTimeField()),
                ("block_number", models.BigIntegerField(db_index=True)),
            ],
            options={
                "ordering": ("block_number",),
                "get_latest_by": "block_number",
                "abstract": False,
                "unique_together": {("wallet_address", "block_number", "pool_address")},
            },
        ),
        migrations.CreateModel(
            name="V3GoerliBucket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bucket_index", models.BigIntegerField()),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("deposit", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lpb", models.DecimalField(decimal_places=18, max_digits=32)),
            ],
            options={
                "abstract": False,
                "unique_together": {("bucket_index", "pool_address")},
            },
        ),
    ]
