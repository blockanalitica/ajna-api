# Generated by Django 4.2.3 on 2023-09-05 06:33

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ajna", "0027_v1ethereumpool_current_meaningful_utilization_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="V2EthereumGrantProposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(db_index=True, max_length=100, unique=True)),
                ("description", models.JSONField()),
                ("executed", models.BooleanField()),
                (
                    "screening_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "funding_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_tokens_requested",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("start_block", models.BigIntegerField()),
                ("end_block", models.BigIntegerField(db_index=True)),
                ("funding_start_block_number", models.BigIntegerField()),
                ("finalize_start_block_number", models.BigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2EthereumLiquidationAuction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=256, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("settled", models.BooleanField()),
                ("settle_time", models.BigIntegerField(null=True)),
                ("datetime", models.DateTimeField()),
                (
                    "neutral_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("kicker", models.CharField(max_length=42)),
                ("kick_time", models.BigIntegerField()),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "collateral_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("borrower", models.CharField(max_length=42)),
                ("wallet_address", models.CharField(max_length=42, null=True)),
                ("bond_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("bond_factor", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "last_take_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "debt_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "collateral_underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "debt_underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(max_length=42, null=True),
                ),
                ("debt_token_address", models.CharField(max_length=42, null=True)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2EthereumPool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                ("address", models.CharField(max_length=42, unique=True)),
                ("created_at_block_number", models.BigIntegerField()),
                ("created_at_timestamp", models.BigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2EthereumPriceFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=18, max_digits=32)),
                ("timestamp", models.BigIntegerField(db_index=True)),
                ("datetime", models.DateTimeField(null=True)),
                ("underlying_address", models.CharField(db_index=True, max_length=42)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2EthereumToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "underlying_address",
                    models.CharField(db_index=True, max_length=42, unique=True),
                ),
                ("symbol", models.CharField(db_index=True, max_length=64)),
                ("name", models.CharField(max_length=255)),
                ("decimals", models.BigIntegerField()),
                ("is_erc721", models.BooleanField()),
                (
                    "underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("pool_count", models.BigIntegerField(null=True)),
                ("total_supply", models.BigIntegerField(null=True)),
                ("tx_count", models.BigIntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2GoerliGrantProposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(db_index=True, max_length=100, unique=True)),
                ("description", models.JSONField()),
                ("executed", models.BooleanField()),
                (
                    "screening_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "funding_votes_received",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_tokens_requested",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("start_block", models.BigIntegerField()),
                ("end_block", models.BigIntegerField(db_index=True)),
                ("funding_start_block_number", models.BigIntegerField()),
                ("finalize_start_block_number", models.BigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2GoerliLiquidationAuction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.CharField(max_length=256, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("settled", models.BooleanField()),
                ("settle_time", models.BigIntegerField(null=True)),
                ("datetime", models.DateTimeField()),
                (
                    "neutral_price",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("kicker", models.CharField(max_length=42)),
                ("kick_time", models.BigIntegerField()),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "collateral_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("borrower", models.CharField(max_length=42)),
                ("wallet_address", models.CharField(max_length=42, null=True)),
                ("bond_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("bond_factor", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "last_take_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "debt_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "collateral_underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "debt_underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(max_length=42, null=True),
                ),
                ("debt_token_address", models.CharField(max_length=42, null=True)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2GoerliPool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                ("address", models.CharField(max_length=42, unique=True)),
                ("created_at_block_number", models.BigIntegerField()),
                ("created_at_timestamp", models.BigIntegerField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2GoerliPriceFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=18, max_digits=32)),
                ("timestamp", models.BigIntegerField(db_index=True)),
                ("datetime", models.DateTimeField(null=True)),
                ("underlying_address", models.CharField(db_index=True, max_length=42)),
            ],
            options={
                "ordering": ("-datetime",),
                "get_latest_by": "datetime",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="V2GoerliToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "underlying_address",
                    models.CharField(db_index=True, max_length=42, unique=True),
                ),
                ("symbol", models.CharField(db_index=True, max_length=64)),
                ("name", models.CharField(max_length=255)),
                ("decimals", models.BigIntegerField()),
                ("is_erc721", models.BooleanField()),
                (
                    "underlying_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("pool_count", models.BigIntegerField(null=True)),
                ("total_supply", models.BigIntegerField(null=True)),
                ("tx_count", models.BigIntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="v1ethereumpool",
            name="tx_count",
            field=models.BigIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name="v1ethereumpoolsnapshot",
            name="tx_count",
            field=models.BigIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name="v1goerlipool",
            name="tx_count",
            field=models.BigIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name="v1goerlipoolsnapshot",
            name="tx_count",
            field=models.BigIntegerField(null=True),
        ),
        migrations.CreateModel(
            name="V2GoerliRepayDebt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.CharField(max_length=128, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("quote_repaid", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "collateral_pulled",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("index", "pool_address", "borrower", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliRemoveQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("lender", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_redeemed", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("pool_address", "bucket_index", "lender", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliRemoveCollateral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("claimer", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_redeemed", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("pool_address", "bucket_index", "claimer", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliPoolVolumeSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("date", models.DateField()),
            ],
            options={
                "abstract": False,
                "unique_together": {("pool_address", "date")},
            },
        ),
        migrations.CreateModel(
            name="V2GoerliPoolSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                ("address", models.CharField(db_index=True, max_length=42)),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateralization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("address", "datetime")},
            },
        ),
        migrations.CreateModel(
            name="V2GoerliPoolEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(max_length=42)),
                (
                    "wallet_addresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=42), null=True, size=None
                    ),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("order_index", models.CharField(max_length=26)),
                ("transaction_hash", models.CharField(max_length=66)),
                ("name", models.CharField(max_length=42)),
                ("data", models.JSONField()),
                (
                    "pool_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["pool_address", "order_index"],
                        name="ajna_v2goer_pool_ad_0da1cd_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses", "order_index"],
                        name="ajna_v2goer_pool_ad_dacfef_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses"],
                        name="ajna_v2goer_pool_ad_b3400d_idx",
                    ),
                    models.Index(
                        fields=["pool_address"], name="ajna_v2goer_pool_ad_6f520f_idx"
                    ),
                    models.Index(
                        fields=["order_index"], name="ajna_v2goer_order_i_608ea6_idx"
                    ),
                ],
                "unique_together": {("pool_address", "order_index")},
            },
        ),
        migrations.CreateModel(
            name="V2GoerliMoveQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index_from", models.BigIntegerField()),
                ("bucket_index_to", models.BigIntegerField()),
                ("lender", models.CharField(max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lp_redeemed_from",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "lp_awarded_to",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index_from",
                        "bucket_index_to",
                        "lender",
                        "transaction_hash",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliDrawDebt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.CharField(max_length=128, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                (
                    "amount_borrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "collateral_pledged",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "fee",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("index", "pool_address", "borrower", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliBucket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bucket_index", models.BigIntegerField()),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("deposit", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lpb", models.DecimalField(decimal_places=18, max_digits=32)),
            ],
            options={
                "abstract": False,
                "unique_together": {("bucket_index", "pool_address")},
            },
        ),
        migrations.CreateModel(
            name="V2GoerliAddQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("lender", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_awarded", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "fee",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index",
                        "lender",
                        "index",
                        "transaction_hash",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="V2GoerliAddCollateral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("actor", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_awarded", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index",
                        "actor",
                        "index",
                        "transaction_hash",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumRepayDebt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.CharField(max_length=128, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                ("quote_repaid", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "collateral_pulled",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("index", "pool_address", "borrower", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumRemoveQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("lender", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_redeemed", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("pool_address", "bucket_index", "lender", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumRemoveCollateral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("claimer", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_redeemed", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("pool_address", "bucket_index", "claimer", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumPoolVolumeSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("date", models.DateField()),
            ],
            options={
                "abstract": False,
                "unique_together": {("pool_address", "date")},
            },
        ),
        migrations.CreateModel(
            name="V2EthereumPoolSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_size", models.DecimalField(decimal_places=18, max_digits=32)),
                ("debt", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "t0debt",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("inflator", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "pending_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("borrow_rate", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lend_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "pledged_collateral",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_interest_earned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("tx_count", models.BigIntegerField(null=True)),
                ("loans_count", models.BigIntegerField()),
                ("max_borrower", models.CharField(max_length=42, null=True)),
                ("hpb", models.DecimalField(decimal_places=18, max_digits=32)),
                ("hpb_index", models.IntegerField()),
                ("htp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("htp_index", models.IntegerField()),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup_index", models.IntegerField()),
                ("momp", models.DecimalField(decimal_places=18, max_digits=32)),
                ("reserves", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "claimable_reserves",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "claimable_reserves_remaining",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("burn_epoch", models.BigIntegerField()),
                (
                    "total_ajna_burned",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "min_debt_amount",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "current_meaningful_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "actual_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "target_utilization",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "total_bond_escrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("datetime", models.DateTimeField(db_index=True)),
                (
                    "quote_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_balance",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                (
                    "quote_token_address",
                    models.CharField(db_index=True, max_length=42, null=True),
                ),
                ("address", models.CharField(db_index=True, max_length=42)),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateralization",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("address", "datetime")},
            },
        ),
        migrations.CreateModel(
            name="V2EthereumPoolEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(max_length=42)),
                (
                    "wallet_addresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=42), null=True, size=None
                    ),
                ),
                ("block_number", models.BigIntegerField()),
                ("block_datetime", models.DateTimeField()),
                ("order_index", models.CharField(max_length=26)),
                ("transaction_hash", models.CharField(max_length=66)),
                ("name", models.CharField(max_length=42)),
                ("data", models.JSONField()),
                (
                    "pool_inflator",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "indexes": [
                    models.Index(
                        fields=["pool_address", "order_index"],
                        name="ajna_v2ethe_pool_ad_5f096b_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses", "order_index"],
                        name="ajna_v2ethe_pool_ad_84c8fe_idx",
                    ),
                    models.Index(
                        fields=["pool_address", "wallet_addresses"],
                        name="ajna_v2ethe_pool_ad_2129fb_idx",
                    ),
                    models.Index(
                        fields=["pool_address"], name="ajna_v2ethe_pool_ad_a027b6_idx"
                    ),
                    models.Index(
                        fields=["order_index"], name="ajna_v2ethe_order_i_be5654_idx"
                    ),
                ],
                "unique_together": {("pool_address", "order_index")},
            },
        ),
        migrations.CreateModel(
            name="V2EthereumMoveQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index_from", models.BigIntegerField()),
                ("bucket_index_to", models.BigIntegerField()),
                ("lender", models.CharField(max_length=42)),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                (
                    "lp_redeemed_from",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "lp_awarded_to",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index_from",
                        "bucket_index_to",
                        "lender",
                        "transaction_hash",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumDrawDebt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("index", models.CharField(max_length=128, null=True)),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("borrower", models.CharField(max_length=42)),
                (
                    "amount_borrowed",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                (
                    "collateral_pledged",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "fee",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "borrow_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "collateral_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "quote_token_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    ("index", "pool_address", "borrower", "transaction_hash")
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumBucket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bucket_index", models.BigIntegerField()),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=18, max_digits=32),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("collateral", models.DecimalField(decimal_places=18, max_digits=32)),
                ("deposit", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lpb", models.DecimalField(decimal_places=18, max_digits=32)),
            ],
            options={
                "abstract": False,
                "unique_together": {("bucket_index", "pool_address")},
            },
        ),
        migrations.CreateModel(
            name="V2EthereumAddQuoteToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                (
                    "bucket_price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                ("lender", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_awarded", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lup", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "deposit_fee_rate",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
                (
                    "fee",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index",
                        "lender",
                        "index",
                        "transaction_hash",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="V2EthereumAddCollateral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pool_address", models.CharField(db_index=True, max_length=42)),
                ("bucket_index", models.BigIntegerField()),
                ("actor", models.CharField(max_length=42)),
                ("index", models.BigIntegerField()),
                ("amount", models.DecimalField(decimal_places=18, max_digits=32)),
                ("lp_awarded", models.DecimalField(decimal_places=18, max_digits=32)),
                ("block_number", models.BigIntegerField()),
                ("block_timestamp", models.BigIntegerField()),
                ("transaction_hash", models.CharField(max_length=66)),
                (
                    "price",
                    models.DecimalField(decimal_places=18, max_digits=32, null=True),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {
                    (
                        "pool_address",
                        "bucket_index",
                        "actor",
                        "index",
                        "transaction_hash",
                    )
                },
            },
        ),
    ]
